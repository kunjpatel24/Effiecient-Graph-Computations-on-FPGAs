-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_function_top_function_Pipeline_VITIS_LOOP_100_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_reload30 : IN STD_LOGIC_VECTOR (31 downto 0);
    visited_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    visited_ce0 : OUT STD_LOGIC;
    visited_we0 : OUT STD_LOGIC;
    visited_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    visited_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    visited_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    visited_ce1 : OUT STD_LOGIC;
    visited_we1 : OUT STD_LOGIC;
    visited_d1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    visited_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
    nodeQueue_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    nodeQueue_ce0 : OUT STD_LOGIC;
    nodeQueue_we0 : OUT STD_LOGIC;
    nodeQueue_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    nodeQueue_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    p_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out_ap_vld : OUT STD_LOGIC;
    adjacencyList_18_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    adjacencyList_18_ce0 : OUT STD_LOGIC;
    adjacencyList_18_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    adjacencyList_16_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    adjacencyList_16_ce0 : OUT STD_LOGIC;
    adjacencyList_16_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    adjacencyList_15_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    adjacencyList_15_ce0 : OUT STD_LOGIC;
    adjacencyList_15_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    adjacencyList_13_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    adjacencyList_13_ce0 : OUT STD_LOGIC;
    adjacencyList_13_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    adjacencyList_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    adjacencyList_11_ce0 : OUT STD_LOGIC;
    adjacencyList_11_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    adjacencyList_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    adjacencyList_7_ce0 : OUT STD_LOGIC;
    adjacencyList_7_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    adjacencyList_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    adjacencyList_4_ce0 : OUT STD_LOGIC;
    adjacencyList_4_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    adjacencyList_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    adjacencyList_3_ce0 : OUT STD_LOGIC;
    adjacencyList_3_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    adjacencyList_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    adjacencyList_2_ce0 : OUT STD_LOGIC;
    adjacencyList_2_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    traversalSize_i : IN STD_LOGIC_VECTOR (31 downto 0);
    traversalSize_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    traversalSize_o_ap_vld : OUT STD_LOGIC;
    allTraversal_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    allTraversal_ce0 : OUT STD_LOGIC;
    allTraversal_we0 : OUT STD_LOGIC;
    allTraversal_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    adjacencyList_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    adjacencyList_1_ce0 : OUT STD_LOGIC;
    adjacencyList_1_q0 : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of top_function_top_function_Pipeline_VITIS_LOOP_100_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal icmp_ln100_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal rear_7_1_reg_470 : STD_LOGIC_VECTOR (31 downto 0);
    signal rear_7_3_reg_497 : STD_LOGIC_VECTOR (31 downto 0);
    signal rear_7_6_reg_511 : STD_LOGIC_VECTOR (31 downto 0);
    signal rear_7_15_reg_566 : STD_LOGIC_VECTOR (31 downto 0);
    signal rear_reg_814 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln100_reg_871 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln101_fu_624_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln101_reg_875 : STD_LOGIC_VECTOR (63 downto 0);
    signal traversalSize_load_reg_885 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal add_ln102_fu_654_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln102_reg_940 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal adjacencyList_1_load_reg_945 : STD_LOGIC_VECTOR (0 downto 0);
    signal adjacencyList_2_load_reg_949 : STD_LOGIC_VECTOR (0 downto 0);
    signal adjacencyList_3_load_reg_953 : STD_LOGIC_VECTOR (0 downto 0);
    signal adjacencyList_4_load_reg_957 : STD_LOGIC_VECTOR (0 downto 0);
    signal adjacencyList_7_load_reg_961 : STD_LOGIC_VECTOR (0 downto 0);
    signal adjacencyList_11_load_reg_965 : STD_LOGIC_VECTOR (0 downto 0);
    signal adjacencyList_13_load_reg_969 : STD_LOGIC_VECTOR (0 downto 0);
    signal adjacencyList_15_load_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal adjacencyList_16_load_reg_977 : STD_LOGIC_VECTOR (0 downto 0);
    signal adjacencyList_18_load_reg_981 : STD_LOGIC_VECTOR (0 downto 0);
    signal visited_load_reg_985 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal visited_load_1_reg_989 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln107_1_fu_676_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln107_1_reg_993 : STD_LOGIC_VECTOR (31 downto 0);
    signal visited_load_2_reg_998 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal add_ln107_2_fu_687_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln107_2_reg_1002 : STD_LOGIC_VECTOR (31 downto 0);
    signal visited_load_3_reg_1007 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln107_3_fu_694_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln107_3_reg_1011 : STD_LOGIC_VECTOR (31 downto 0);
    signal visited_load_4_reg_1016 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal visited_load_5_reg_1020 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln107_4_fu_709_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln107_4_reg_1024 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal visited_load_6_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal visited_load_7_reg_1034 : STD_LOGIC_VECTOR (0 downto 0);
    signal visited_load_8_reg_1038 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal visited_load_9_reg_1042 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln107_5_fu_719_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln107_5_reg_1046 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal add_ln107_6_fu_730_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln107_6_reg_1051 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal add_ln107_7_fu_741_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_rear_7_0_phi_fu_462_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln107_fu_665_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_rear_7_0_reg_459 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_rear_7_1_phi_fu_473_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_rear_7_1_reg_470 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_rear_7_2_phi_fu_487_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_rear_7_2_reg_484 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_rear_7_3_phi_fu_500_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_rear_7_3_reg_497 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_rear_7_6_reg_511 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_rear_7_10_phi_fu_528_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_rear_7_10_reg_525 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_rear_7_12_phi_fu_542_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_rear_7_12_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_rear_7_14_reg_553 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_phi_mux_rear_7_15_phi_fu_569_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln107_8_fu_752_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_rear_7_15_reg_566 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_rear_7_17_phi_fu_583_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln107_9_fu_764_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_rear_7_17_reg_580 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_rear_7_17_reg_580 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln102_fu_635_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal idxprom10_i64_cast_fu_640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln107_fu_671_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln107_1_fu_683_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln107_2_fu_701_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln107_3_fu_705_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln107_4_fu_715_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal zext_ln107_5_fu_725_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal zext_ln107_6_fu_736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal zext_ln107_7_fu_747_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal zext_ln107_8_fu_759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal zext_ln107_9_fu_771_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal empty_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal front_1_fu_100 : STD_LOGIC_VECTOR (63 downto 0);
    signal rear_1_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal trunc_ln100_fu_614_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_950 : BOOLEAN;
    signal ap_condition_954 : BOOLEAN;
    signal ap_condition_959 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component top_function_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component top_function_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage12_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_rear_7_14_reg_553_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_lv1_0 = adjacencyList_15_load_reg_973) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_lv1_1 = adjacencyList_15_load_reg_973) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (visited_load_7_reg_1034 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)))) then 
                ap_phi_reg_pp0_iter0_rear_7_14_reg_553 <= ap_phi_mux_rear_7_12_phi_fu_542_p6;
            elsif (((ap_const_lv1_1 = adjacencyList_15_load_reg_973) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (visited_load_7_reg_1034 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                ap_phi_reg_pp0_iter0_rear_7_14_reg_553 <= add_ln107_7_fu_741_p2;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_rear_7_6_reg_511_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0))) then
                if ((ap_const_boolean_1 = ap_condition_959)) then 
                    ap_phi_reg_pp0_iter0_rear_7_6_reg_511 <= rear_7_3_reg_497;
                elsif ((ap_const_boolean_1 = ap_condition_954)) then 
                    ap_phi_reg_pp0_iter0_rear_7_6_reg_511 <= ap_phi_mux_rear_7_3_phi_fu_500_p6;
                elsif ((ap_const_boolean_1 = ap_condition_950)) then 
                    ap_phi_reg_pp0_iter0_rear_7_6_reg_511 <= add_ln107_4_fu_709_p2;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_rear_7_17_reg_580_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_lv1_0 = adjacencyList_18_load_reg_981) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_lv1_1 = adjacencyList_18_load_reg_981) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (visited_load_9_reg_1042 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)))) then 
                ap_phi_reg_pp0_iter1_rear_7_17_reg_580 <= ap_phi_mux_rear_7_15_phi_fu_569_p6;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
                ap_phi_reg_pp0_iter1_rear_7_17_reg_580 <= ap_phi_reg_pp0_iter0_rear_7_17_reg_580;
            end if; 
        end if;
    end process;

    empty_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    empty_fu_96 <= p_reload30;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0))) then 
                    empty_fu_96 <= add_ln102_reg_940;
                end if;
            end if; 
        end if;
    end process;

    front_1_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    front_1_fu_100 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0))) then 
                    front_1_fu_100 <= add_ln101_reg_875;
                end if;
            end if; 
        end if;
    end process;

    rear_1_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    rear_1_fu_104 <= ap_const_lv32_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0))) then 
                    rear_1_fu_104 <= ap_phi_mux_rear_7_17_phi_fu_583_p6;
                end if;
            end if; 
        end if;
    end process;

    rear_7_15_reg_566_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_lv1_0 = adjacencyList_16_load_reg_977) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_lv1_1 = adjacencyList_16_load_reg_977) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (visited_load_8_reg_1038 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)))) then 
                rear_7_15_reg_566 <= ap_phi_reg_pp0_iter0_rear_7_14_reg_553;
            elsif (((ap_const_lv1_1 = adjacencyList_16_load_reg_977) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (visited_load_8_reg_1038 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
                rear_7_15_reg_566 <= add_ln107_8_fu_752_p2;
            elsif ((not((icmp_ln100_reg_871 = ap_const_lv1_1)) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
                rear_7_15_reg_566 <= ap_phi_reg_pp0_iter0_rear_7_15_reg_566;
            end if; 
        end if;
    end process;

    rear_7_1_reg_470_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((visited_q0 = ap_const_lv1_1) and (ap_const_lv1_1 = adjacencyList_2_load_reg_949) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_lv1_0 = adjacencyList_2_load_reg_949) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
                rear_7_1_reg_470 <= ap_phi_mux_rear_7_0_phi_fu_462_p6;
            elsif (((visited_q0 = ap_const_lv1_0) and (ap_const_lv1_1 = adjacencyList_2_load_reg_949) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                rear_7_1_reg_470 <= add_ln107_1_fu_676_p2;
            elsif ((not((icmp_ln100_reg_871 = ap_const_lv1_1)) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                rear_7_1_reg_470 <= ap_phi_reg_pp0_iter0_rear_7_1_reg_470;
            end if; 
        end if;
    end process;

    rear_7_3_reg_497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((visited_q0 = ap_const_lv1_1) and (ap_const_lv1_1 = adjacencyList_4_load_reg_957) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_lv1_0 = adjacencyList_4_load_reg_957) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
                rear_7_3_reg_497 <= ap_phi_mux_rear_7_2_phi_fu_487_p6;
            elsif (((visited_q0 = ap_const_lv1_0) and (ap_const_lv1_1 = adjacencyList_4_load_reg_957) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                rear_7_3_reg_497 <= add_ln107_3_fu_694_p2;
            elsif ((not((icmp_ln100_reg_871 = ap_const_lv1_1)) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                rear_7_3_reg_497 <= ap_phi_reg_pp0_iter0_rear_7_3_reg_497;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln100_fu_618_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add_ln101_reg_875 <= add_ln101_fu_624_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                add_ln102_reg_940 <= add_ln102_fu_654_p2;
                adjacencyList_11_load_reg_965 <= adjacencyList_11_q0;
                adjacencyList_13_load_reg_969 <= adjacencyList_13_q0;
                adjacencyList_15_load_reg_973 <= adjacencyList_15_q0;
                adjacencyList_16_load_reg_977 <= adjacencyList_16_q0;
                adjacencyList_18_load_reg_981 <= adjacencyList_18_q0;
                adjacencyList_1_load_reg_945 <= adjacencyList_1_q0;
                adjacencyList_2_load_reg_949 <= adjacencyList_2_q0;
                adjacencyList_3_load_reg_953 <= adjacencyList_3_q0;
                adjacencyList_4_load_reg_957 <= adjacencyList_4_q0;
                adjacencyList_7_load_reg_961 <= adjacencyList_7_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((visited_q0 = ap_const_lv1_0) and (ap_const_lv1_1 = adjacencyList_2_load_reg_949) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                add_ln107_1_reg_993 <= add_ln107_1_fu_676_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((visited_q1 = ap_const_lv1_0) and (ap_const_lv1_1 = adjacencyList_3_load_reg_953) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                add_ln107_2_reg_1002 <= add_ln107_2_fu_687_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((visited_q0 = ap_const_lv1_0) and (ap_const_lv1_1 = adjacencyList_4_load_reg_957) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                add_ln107_3_reg_1011 <= add_ln107_3_fu_694_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = adjacencyList_7_load_reg_961) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (visited_load_4_reg_1016 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                add_ln107_4_reg_1024 <= add_ln107_4_fu_709_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = adjacencyList_11_load_reg_965) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (visited_load_5_reg_1020 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                add_ln107_5_reg_1046 <= add_ln107_5_fu_719_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = adjacencyList_13_load_reg_969) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (visited_load_6_reg_1030 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then
                add_ln107_6_reg_1051 <= add_ln107_6_fu_730_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_lv1_0 = adjacencyList_1_q0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter0_rear_7_0_reg_459 <= rear_reg_814;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_lv1_0 = adjacencyList_11_load_reg_965) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_lv1_1 = adjacencyList_11_load_reg_965) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (visited_load_5_reg_1020 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then
                ap_phi_reg_pp0_iter0_rear_7_10_reg_525 <= ap_phi_reg_pp0_iter0_rear_7_6_reg_511;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_lv1_0 = adjacencyList_13_load_reg_969) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_lv1_1 = adjacencyList_13_load_reg_969) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (visited_load_6_reg_1030 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)))) then
                ap_phi_reg_pp0_iter0_rear_7_12_reg_539 <= ap_phi_mux_rear_7_10_phi_fu_528_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_lv1_0 = adjacencyList_3_load_reg_953) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter0_rear_7_2_reg_484 <= ap_phi_mux_rear_7_1_phi_fu_473_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                icmp_ln100_reg_871 <= icmp_ln100_fu_618_p2;
                rear_reg_814 <= rear_1_fu_104;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                rear_7_6_reg_511 <= ap_phi_reg_pp0_iter0_rear_7_6_reg_511;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                traversalSize_load_reg_885 <= traversalSize_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = adjacencyList_2_load_reg_949) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                visited_load_1_reg_989 <= visited_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = adjacencyList_3_load_reg_953) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                visited_load_2_reg_998 <= visited_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = adjacencyList_4_load_reg_957) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                visited_load_3_reg_1007 <= visited_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = adjacencyList_7_load_reg_961) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                visited_load_4_reg_1016 <= visited_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = adjacencyList_11_load_reg_965) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                visited_load_5_reg_1020 <= visited_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = adjacencyList_13_load_reg_969) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                visited_load_6_reg_1030 <= visited_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = adjacencyList_15_load_reg_973) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                visited_load_7_reg_1034 <= visited_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = adjacencyList_16_load_reg_977) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                visited_load_8_reg_1038 <= visited_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = adjacencyList_18_load_reg_981) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                visited_load_9_reg_1042 <= visited_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = adjacencyList_1_load_reg_945) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                visited_load_reg_985 <= visited_q1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter0_stage1, ap_block_pp0_stage12_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    add_ln101_fu_624_p2 <= std_logic_vector(unsigned(front_1_fu_100) + unsigned(ap_const_lv64_1));
    add_ln102_fu_654_p2 <= std_logic_vector(unsigned(traversalSize_load_reg_885) + unsigned(ap_const_lv32_1));
    add_ln107_1_fu_676_p2 <= std_logic_vector(unsigned(ap_phi_mux_rear_7_0_phi_fu_462_p6) + unsigned(ap_const_lv32_1));
    add_ln107_2_fu_687_p2 <= std_logic_vector(unsigned(rear_7_1_reg_470) + unsigned(ap_const_lv32_1));
    add_ln107_3_fu_694_p2 <= std_logic_vector(unsigned(ap_phi_mux_rear_7_2_phi_fu_487_p6) + unsigned(ap_const_lv32_1));
    add_ln107_4_fu_709_p2 <= std_logic_vector(unsigned(rear_7_3_reg_497) + unsigned(ap_const_lv32_1));
    add_ln107_5_fu_719_p2 <= std_logic_vector(unsigned(rear_7_6_reg_511) + unsigned(ap_const_lv32_1));
    add_ln107_6_fu_730_p2 <= std_logic_vector(unsigned(ap_phi_mux_rear_7_10_phi_fu_528_p6) + unsigned(ap_const_lv32_1));
    add_ln107_7_fu_741_p2 <= std_logic_vector(unsigned(ap_phi_mux_rear_7_12_phi_fu_542_p6) + unsigned(ap_const_lv32_1));
    add_ln107_8_fu_752_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter0_rear_7_14_reg_553) + unsigned(ap_const_lv32_1));
    add_ln107_9_fu_764_p2 <= std_logic_vector(unsigned(rear_7_15_reg_566) + unsigned(ap_const_lv32_1));
    add_ln107_fu_665_p2 <= std_logic_vector(unsigned(rear_reg_814) + unsigned(ap_const_lv32_1));
    adjacencyList_11_address0 <= idxprom10_i64_cast_fu_640_p1(5 - 1 downto 0);

    adjacencyList_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            adjacencyList_11_ce0 <= ap_const_logic_1;
        else 
            adjacencyList_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    adjacencyList_13_address0 <= idxprom10_i64_cast_fu_640_p1(5 - 1 downto 0);

    adjacencyList_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            adjacencyList_13_ce0 <= ap_const_logic_1;
        else 
            adjacencyList_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    adjacencyList_15_address0 <= idxprom10_i64_cast_fu_640_p1(5 - 1 downto 0);

    adjacencyList_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            adjacencyList_15_ce0 <= ap_const_logic_1;
        else 
            adjacencyList_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    adjacencyList_16_address0 <= idxprom10_i64_cast_fu_640_p1(5 - 1 downto 0);

    adjacencyList_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            adjacencyList_16_ce0 <= ap_const_logic_1;
        else 
            adjacencyList_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    adjacencyList_18_address0 <= idxprom10_i64_cast_fu_640_p1(5 - 1 downto 0);

    adjacencyList_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            adjacencyList_18_ce0 <= ap_const_logic_1;
        else 
            adjacencyList_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    adjacencyList_1_address0 <= idxprom10_i64_cast_fu_640_p1(5 - 1 downto 0);

    adjacencyList_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            adjacencyList_1_ce0 <= ap_const_logic_1;
        else 
            adjacencyList_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    adjacencyList_2_address0 <= idxprom10_i64_cast_fu_640_p1(5 - 1 downto 0);

    adjacencyList_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            adjacencyList_2_ce0 <= ap_const_logic_1;
        else 
            adjacencyList_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    adjacencyList_3_address0 <= idxprom10_i64_cast_fu_640_p1(5 - 1 downto 0);

    adjacencyList_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            adjacencyList_3_ce0 <= ap_const_logic_1;
        else 
            adjacencyList_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    adjacencyList_4_address0 <= idxprom10_i64_cast_fu_640_p1(5 - 1 downto 0);

    adjacencyList_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            adjacencyList_4_ce0 <= ap_const_logic_1;
        else 
            adjacencyList_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    adjacencyList_7_address0 <= idxprom10_i64_cast_fu_640_p1(5 - 1 downto 0);

    adjacencyList_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            adjacencyList_7_ce0 <= ap_const_logic_1;
        else 
            adjacencyList_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    allTraversal_address0 <= zext_ln102_fu_635_p1(5 - 1 downto 0);

    allTraversal_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            allTraversal_ce0 <= ap_const_logic_1;
        else 
            allTraversal_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    allTraversal_d0 <= nodeQueue_q0;

    allTraversal_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            allTraversal_we0 <= ap_const_logic_1;
        else 
            allTraversal_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_950_assign_proc : process(adjacencyList_7_load_reg_961, visited_load_4_reg_1016, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
                ap_condition_950 <= ((ap_const_lv1_1 = adjacencyList_7_load_reg_961) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (visited_load_4_reg_1016 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7));
    end process;


    ap_condition_954_assign_proc : process(adjacencyList_7_load_reg_961, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
                ap_condition_954 <= ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_lv1_0 = adjacencyList_7_load_reg_961) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5));
    end process;


    ap_condition_959_assign_proc : process(visited_q1, adjacencyList_7_load_reg_961, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
                ap_condition_959 <= ((visited_q1 = ap_const_lv1_1) and (ap_const_lv1_1 = adjacencyList_7_load_reg_961) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6));
    end process;


    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln100_fu_618_p2)
    begin
        if (((icmp_ln100_fu_618_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_phi_mux_rear_7_0_phi_fu_462_p6_assign_proc : process(visited_q1, rear_reg_814, icmp_ln100_reg_871, adjacencyList_1_load_reg_945, add_ln107_fu_665_p2, ap_phi_reg_pp0_iter0_rear_7_0_reg_459)
    begin
        if (((ap_const_lv1_1 = adjacencyList_1_load_reg_945) and (icmp_ln100_reg_871 = ap_const_lv1_0))) then
            if ((visited_q1 = ap_const_lv1_1)) then 
                ap_phi_mux_rear_7_0_phi_fu_462_p6 <= rear_reg_814;
            elsif ((visited_q1 = ap_const_lv1_0)) then 
                ap_phi_mux_rear_7_0_phi_fu_462_p6 <= add_ln107_fu_665_p2;
            else 
                ap_phi_mux_rear_7_0_phi_fu_462_p6 <= ap_phi_reg_pp0_iter0_rear_7_0_reg_459;
            end if;
        else 
            ap_phi_mux_rear_7_0_phi_fu_462_p6 <= ap_phi_reg_pp0_iter0_rear_7_0_reg_459;
        end if; 
    end process;


    ap_phi_mux_rear_7_10_phi_fu_528_p6_assign_proc : process(icmp_ln100_reg_871, adjacencyList_11_load_reg_965, visited_load_5_reg_1020, add_ln107_5_reg_1046, ap_phi_reg_pp0_iter0_rear_7_10_reg_525)
    begin
        if (((ap_const_lv1_1 = adjacencyList_11_load_reg_965) and (visited_load_5_reg_1020 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0))) then 
            ap_phi_mux_rear_7_10_phi_fu_528_p6 <= add_ln107_5_reg_1046;
        else 
            ap_phi_mux_rear_7_10_phi_fu_528_p6 <= ap_phi_reg_pp0_iter0_rear_7_10_reg_525;
        end if; 
    end process;


    ap_phi_mux_rear_7_12_phi_fu_542_p6_assign_proc : process(icmp_ln100_reg_871, adjacencyList_13_load_reg_969, visited_load_6_reg_1030, add_ln107_6_reg_1051, ap_phi_reg_pp0_iter0_rear_7_12_reg_539)
    begin
        if (((ap_const_lv1_1 = adjacencyList_13_load_reg_969) and (visited_load_6_reg_1030 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0))) then 
            ap_phi_mux_rear_7_12_phi_fu_542_p6 <= add_ln107_6_reg_1051;
        else 
            ap_phi_mux_rear_7_12_phi_fu_542_p6 <= ap_phi_reg_pp0_iter0_rear_7_12_reg_539;
        end if; 
    end process;


    ap_phi_mux_rear_7_15_phi_fu_569_p6_assign_proc : process(icmp_ln100_reg_871, adjacencyList_16_load_reg_977, visited_load_8_reg_1038, ap_phi_reg_pp0_iter0_rear_7_14_reg_553, add_ln107_8_fu_752_p2, ap_phi_reg_pp0_iter0_rear_7_15_reg_566)
    begin
        if ((((ap_const_lv1_0 = adjacencyList_16_load_reg_977) and (icmp_ln100_reg_871 = ap_const_lv1_0)) or ((ap_const_lv1_1 = adjacencyList_16_load_reg_977) and (visited_load_8_reg_1038 = ap_const_lv1_1) and (icmp_ln100_reg_871 = ap_const_lv1_0)))) then 
            ap_phi_mux_rear_7_15_phi_fu_569_p6 <= ap_phi_reg_pp0_iter0_rear_7_14_reg_553;
        elsif (((ap_const_lv1_1 = adjacencyList_16_load_reg_977) and (visited_load_8_reg_1038 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0))) then 
            ap_phi_mux_rear_7_15_phi_fu_569_p6 <= add_ln107_8_fu_752_p2;
        else 
            ap_phi_mux_rear_7_15_phi_fu_569_p6 <= ap_phi_reg_pp0_iter0_rear_7_15_reg_566;
        end if; 
    end process;


    ap_phi_mux_rear_7_17_phi_fu_583_p6_assign_proc : process(icmp_ln100_reg_871, adjacencyList_18_load_reg_981, visited_load_9_reg_1042, add_ln107_9_fu_764_p2, ap_phi_reg_pp0_iter1_rear_7_17_reg_580)
    begin
        if (((ap_const_lv1_1 = adjacencyList_18_load_reg_981) and (visited_load_9_reg_1042 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0))) then 
            ap_phi_mux_rear_7_17_phi_fu_583_p6 <= add_ln107_9_fu_764_p2;
        else 
            ap_phi_mux_rear_7_17_phi_fu_583_p6 <= ap_phi_reg_pp0_iter1_rear_7_17_reg_580;
        end if; 
    end process;


    ap_phi_mux_rear_7_1_phi_fu_473_p6_assign_proc : process(visited_q0, icmp_ln100_reg_871, adjacencyList_2_load_reg_949, add_ln107_1_fu_676_p2, ap_phi_mux_rear_7_0_phi_fu_462_p6, ap_phi_reg_pp0_iter0_rear_7_1_reg_470)
    begin
        if ((((visited_q0 = ap_const_lv1_1) and (ap_const_lv1_1 = adjacencyList_2_load_reg_949) and (icmp_ln100_reg_871 = ap_const_lv1_0)) or ((ap_const_lv1_0 = adjacencyList_2_load_reg_949) and (icmp_ln100_reg_871 = ap_const_lv1_0)))) then 
            ap_phi_mux_rear_7_1_phi_fu_473_p6 <= ap_phi_mux_rear_7_0_phi_fu_462_p6;
        elsif (((visited_q0 = ap_const_lv1_0) and (ap_const_lv1_1 = adjacencyList_2_load_reg_949) and (icmp_ln100_reg_871 = ap_const_lv1_0))) then 
            ap_phi_mux_rear_7_1_phi_fu_473_p6 <= add_ln107_1_fu_676_p2;
        else 
            ap_phi_mux_rear_7_1_phi_fu_473_p6 <= ap_phi_reg_pp0_iter0_rear_7_1_reg_470;
        end if; 
    end process;


    ap_phi_mux_rear_7_2_phi_fu_487_p6_assign_proc : process(visited_q1, rear_7_1_reg_470, icmp_ln100_reg_871, adjacencyList_3_load_reg_953, add_ln107_2_fu_687_p2, ap_phi_reg_pp0_iter0_rear_7_2_reg_484)
    begin
        if (((ap_const_lv1_1 = adjacencyList_3_load_reg_953) and (icmp_ln100_reg_871 = ap_const_lv1_0))) then
            if ((visited_q1 = ap_const_lv1_1)) then 
                ap_phi_mux_rear_7_2_phi_fu_487_p6 <= rear_7_1_reg_470;
            elsif ((visited_q1 = ap_const_lv1_0)) then 
                ap_phi_mux_rear_7_2_phi_fu_487_p6 <= add_ln107_2_fu_687_p2;
            else 
                ap_phi_mux_rear_7_2_phi_fu_487_p6 <= ap_phi_reg_pp0_iter0_rear_7_2_reg_484;
            end if;
        else 
            ap_phi_mux_rear_7_2_phi_fu_487_p6 <= ap_phi_reg_pp0_iter0_rear_7_2_reg_484;
        end if; 
    end process;


    ap_phi_mux_rear_7_3_phi_fu_500_p6_assign_proc : process(visited_q0, icmp_ln100_reg_871, adjacencyList_4_load_reg_957, add_ln107_3_fu_694_p2, ap_phi_mux_rear_7_2_phi_fu_487_p6, ap_phi_reg_pp0_iter0_rear_7_3_reg_497)
    begin
        if ((((ap_const_lv1_0 = adjacencyList_4_load_reg_957) and (icmp_ln100_reg_871 = ap_const_lv1_0)) or ((visited_q0 = ap_const_lv1_1) and (ap_const_lv1_1 = adjacencyList_4_load_reg_957) and (icmp_ln100_reg_871 = ap_const_lv1_0)))) then 
            ap_phi_mux_rear_7_3_phi_fu_500_p6 <= ap_phi_mux_rear_7_2_phi_fu_487_p6;
        elsif (((visited_q0 = ap_const_lv1_0) and (ap_const_lv1_1 = adjacencyList_4_load_reg_957) and (icmp_ln100_reg_871 = ap_const_lv1_0))) then 
            ap_phi_mux_rear_7_3_phi_fu_500_p6 <= add_ln107_3_fu_694_p2;
        else 
            ap_phi_mux_rear_7_3_phi_fu_500_p6 <= ap_phi_reg_pp0_iter0_rear_7_3_reg_497;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_rear_7_15_reg_566 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_rear_7_17_reg_580 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_rear_7_1_reg_470 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_rear_7_3_reg_497 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage12_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln100_fu_618_p2 <= "1" when (trunc_ln100_fu_614_p1 = rear_1_fu_104) else "0";
    idxprom10_i64_cast_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nodeQueue_q0),64));

    nodeQueue_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage12, add_ln101_fu_624_p2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage1, zext_ln107_fu_671_p1, ap_block_pp0_stage4, zext_ln107_1_fu_683_p1, ap_block_pp0_stage5, zext_ln107_2_fu_701_p1, ap_block_pp0_stage6, zext_ln107_3_fu_705_p1, ap_block_pp0_stage7, zext_ln107_4_fu_715_p1, ap_block_pp0_stage8, zext_ln107_5_fu_725_p1, ap_block_pp0_stage9, zext_ln107_6_fu_736_p1, ap_block_pp0_stage10, zext_ln107_7_fu_747_p1, ap_block_pp0_stage11, zext_ln107_8_fu_759_p1, ap_block_pp0_stage12, zext_ln107_9_fu_771_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            nodeQueue_address0 <= zext_ln107_9_fu_771_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            nodeQueue_address0 <= zext_ln107_8_fu_759_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            nodeQueue_address0 <= zext_ln107_7_fu_747_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            nodeQueue_address0 <= zext_ln107_6_fu_736_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            nodeQueue_address0 <= zext_ln107_5_fu_725_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            nodeQueue_address0 <= zext_ln107_4_fu_715_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            nodeQueue_address0 <= zext_ln107_3_fu_705_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            nodeQueue_address0 <= zext_ln107_2_fu_701_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            nodeQueue_address0 <= zext_ln107_1_fu_683_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            nodeQueue_address0 <= zext_ln107_fu_671_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            nodeQueue_address0 <= add_ln101_fu_624_p2(5 - 1 downto 0);
        else 
            nodeQueue_address0 <= "XXXXX";
        end if; 
    end process;


    nodeQueue_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            nodeQueue_ce0 <= ap_const_logic_1;
        else 
            nodeQueue_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    nodeQueue_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            nodeQueue_d0 <= ap_const_lv5_12;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            nodeQueue_d0 <= ap_const_lv5_10;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            nodeQueue_d0 <= ap_const_lv5_F;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            nodeQueue_d0 <= ap_const_lv5_D;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            nodeQueue_d0 <= ap_const_lv5_B;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            nodeQueue_d0 <= ap_const_lv5_7;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            nodeQueue_d0 <= ap_const_lv5_4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            nodeQueue_d0 <= ap_const_lv5_3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            nodeQueue_d0 <= ap_const_lv5_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            nodeQueue_d0 <= ap_const_lv5_1;
        else 
            nodeQueue_d0 <= "XXXXX";
        end if; 
    end process;


    nodeQueue_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage12, visited_q1, icmp_ln100_reg_871, adjacencyList_1_load_reg_945, adjacencyList_2_load_reg_949, adjacencyList_3_load_reg_953, adjacencyList_4_load_reg_957, adjacencyList_7_load_reg_961, adjacencyList_11_load_reg_965, adjacencyList_13_load_reg_969, adjacencyList_15_load_reg_973, adjacencyList_16_load_reg_977, adjacencyList_18_load_reg_981, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, visited_load_1_reg_989, visited_load_2_reg_998, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, visited_load_3_reg_1007, visited_load_4_reg_1016, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, visited_load_5_reg_1020, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, visited_load_6_reg_1030, visited_load_7_reg_1034, visited_load_8_reg_1038, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, visited_load_9_reg_1042, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_lv1_1 = adjacencyList_18_load_reg_981) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (visited_load_9_reg_1042 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = adjacencyList_16_load_reg_977) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (visited_load_8_reg_1038 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_lv1_1 = adjacencyList_15_load_reg_973) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (visited_load_7_reg_1034 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_lv1_1 = adjacencyList_13_load_reg_969) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (visited_load_6_reg_1030 = ap_const_lv1_0) 
    and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_lv1_1 = adjacencyList_11_load_reg_965) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (visited_load_5_reg_1020 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_lv1_1 = adjacencyList_7_load_reg_961) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (visited_load_4_reg_1016 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_lv1_1 = adjacencyList_4_load_reg_957) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (visited_load_3_reg_1007 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((visited_q1 
    = ap_const_lv1_0) and (ap_const_lv1_1 = adjacencyList_1_load_reg_945) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_lv1_1 = adjacencyList_3_load_reg_953) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (visited_load_2_reg_998 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_lv1_1 = adjacencyList_2_load_reg_949) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (visited_load_1_reg_989 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            nodeQueue_we0 <= ap_const_logic_1;
        else 
            nodeQueue_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_out <= empty_fu_96;

    p_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln100_fu_618_p2, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln100_fu_618_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            p_out_ap_vld <= ap_const_logic_1;
        else 
            p_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    traversalSize_o_assign_proc : process(ap_enable_reg_pp0_iter0, traversalSize_i, add_ln102_fu_654_p2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            traversalSize_o <= add_ln102_fu_654_p2;
        else 
            traversalSize_o <= traversalSize_i;
        end if; 
    end process;


    traversalSize_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            traversalSize_o_ap_vld <= ap_const_logic_1;
        else 
            traversalSize_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln100_fu_614_p1 <= front_1_fu_100(32 - 1 downto 0);

    visited_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            visited_address0 <= ap_const_lv64_12(5 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            visited_address0 <= ap_const_lv64_F(5 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            visited_address0 <= ap_const_lv64_B(5 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            visited_address0 <= ap_const_lv64_4(5 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            visited_address0 <= ap_const_lv64_2(5 - 1 downto 0);
        else 
            visited_address0 <= "XXXXX";
        end if; 
    end process;


    visited_address1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            visited_address1 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            visited_address1 <= ap_const_lv64_D(5 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            visited_address1 <= ap_const_lv64_7(5 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            visited_address1 <= ap_const_lv64_3(5 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            visited_address1 <= ap_const_lv64_1(5 - 1 downto 0);
        else 
            visited_address1 <= "XXXXX";
        end if; 
    end process;


    visited_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            visited_ce0 <= ap_const_logic_1;
        else 
            visited_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    visited_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            visited_ce1 <= ap_const_logic_1;
        else 
            visited_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    visited_d0 <= ap_const_lv1_1;
    visited_d1 <= ap_const_lv1_1;

    visited_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, icmp_ln100_reg_871, adjacencyList_2_load_reg_949, adjacencyList_4_load_reg_957, adjacencyList_11_load_reg_965, adjacencyList_15_load_reg_973, adjacencyList_18_load_reg_981, visited_load_1_reg_989, visited_load_3_reg_1007, visited_load_5_reg_1020, visited_load_7_reg_1034, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, visited_load_9_reg_1042, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001)
    begin
        if ((((ap_const_lv1_1 = adjacencyList_18_load_reg_981) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (visited_load_9_reg_1042 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_lv1_1 = adjacencyList_15_load_reg_973) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (visited_load_7_reg_1034 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_lv1_1 = adjacencyList_11_load_reg_965) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (visited_load_5_reg_1020 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_lv1_1 = adjacencyList_4_load_reg_957) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) 
    and (visited_load_3_reg_1007 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_lv1_1 = adjacencyList_2_load_reg_949) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (visited_load_1_reg_989 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            visited_we0 <= ap_const_logic_1;
        else 
            visited_we0 <= ap_const_logic_0;
        end if; 
    end process;


    visited_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, icmp_ln100_reg_871, adjacencyList_1_load_reg_945, adjacencyList_3_load_reg_953, adjacencyList_7_load_reg_961, adjacencyList_13_load_reg_969, adjacencyList_16_load_reg_977, visited_load_reg_985, visited_load_2_reg_998, visited_load_4_reg_1016, visited_load_6_reg_1030, visited_load_8_reg_1038, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001)
    begin
        if ((((ap_const_lv1_1 = adjacencyList_16_load_reg_977) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (visited_load_8_reg_1038 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_lv1_1 = adjacencyList_13_load_reg_969) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (visited_load_6_reg_1030 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_lv1_1 = adjacencyList_7_load_reg_961) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (visited_load_4_reg_1016 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_lv1_1 = adjacencyList_3_load_reg_953) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) 
    and (visited_load_2_reg_998 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_lv1_1 = adjacencyList_1_load_reg_945) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (visited_load_reg_985 = ap_const_lv1_0) and (icmp_ln100_reg_871 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            visited_we1 <= ap_const_logic_1;
        else 
            visited_we1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln102_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(traversalSize_i),64));
    zext_ln107_1_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_1_reg_993),64));
    zext_ln107_2_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_2_reg_1002),64));
    zext_ln107_3_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_3_reg_1011),64));
    zext_ln107_4_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_4_reg_1024),64));
    zext_ln107_5_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_5_fu_719_p2),64));
    zext_ln107_6_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_6_fu_730_p2),64));
    zext_ln107_7_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_7_fu_741_p2),64));
    zext_ln107_8_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_8_fu_752_p2),64));
    zext_ln107_9_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_9_fu_764_p2),64));
    zext_ln107_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_fu_665_p2),64));
end behav;
