

================================================================
== Vitis HLS Report for 'top_function_Pipeline_VITIS_LOOP_79_1'
================================================================
* Date:           Mon Jul 24 10:31:08 2023

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        AllAlgoExecTest
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexu
* Target device:  xcvu065_CIV-ffvc1517-1H-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.840 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_79_1  |        ?|        ?|        13|         13|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 13, depth = 13


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 1
  Pipeline-0 : II = 13, D = 13, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.78>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 16 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%top = alloca i32 1"   --->   Operation 17 'alloca' 'top' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_reload"   --->   Operation 18 'read' 'p_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.63ns)   --->   "%store_ln0 = store i32 0, i32 %top"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 0.63>
ST_1 : Operation 20 [1/1] (0.63ns)   --->   "%store_ln0 = store i32 %p_reload_read, i32 %empty"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 0.63>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln0 = br void %while.cond.i24"   --->   Operation 21 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%top_1 = load i32 %top" [Graph.cpp:80->Graph.cpp:127]   --->   Operation 22 'load' 'top_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%visited_1_addr = getelementptr i1 %visited_1, i64 0, i64 1" [Graph.cpp:76->Graph.cpp:127]   --->   Operation 23 'getelementptr' 'visited_1_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%visited_1_addr_1 = getelementptr i1 %visited_1, i64 0, i64 2" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 24 'getelementptr' 'visited_1_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%visited_1_addr_2 = getelementptr i1 %visited_1, i64 0, i64 3" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 25 'getelementptr' 'visited_1_addr_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%visited_1_addr_3 = getelementptr i1 %visited_1, i64 0, i64 4" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 26 'getelementptr' 'visited_1_addr_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%visited_1_addr_4 = getelementptr i1 %visited_1, i64 0, i64 7" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 27 'getelementptr' 'visited_1_addr_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%visited_1_addr_5 = getelementptr i1 %visited_1, i64 0, i64 11" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 28 'getelementptr' 'visited_1_addr_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%visited_1_addr_6 = getelementptr i1 %visited_1, i64 0, i64 13" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 29 'getelementptr' 'visited_1_addr_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%visited_1_addr_7 = getelementptr i1 %visited_1, i64 0, i64 15" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 30 'getelementptr' 'visited_1_addr_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%visited_1_addr_8 = getelementptr i1 %visited_1, i64 0, i64 16" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 31 'getelementptr' 'visited_1_addr_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%visited_1_addr_9 = getelementptr i1 %visited_1, i64 0, i64 18" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 32 'getelementptr' 'visited_1_addr_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 33 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (1.78ns)   --->   "%icmp_ln79 = icmp_eq  i32 %top_1, i32 4294967295" [Graph.cpp:79->Graph.cpp:127]   --->   Operation 34 'icmp' 'icmp_ln79' <Predicate = true> <Delay = 1.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln79 = br i1 %icmp_ln79, void %VITIS_LOOP_83_2.i, void %memset.loop.i50.preheader.exitStub" [Graph.cpp:79->Graph.cpp:127]   --->   Operation 35 'br' 'br_ln79' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i32 %top_1" [Graph.cpp:80->Graph.cpp:127]   --->   Operation 36 'zext' 'zext_ln80' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%stack_addr = getelementptr i5 %stack, i64 0, i64 %zext_ln80" [Graph.cpp:80->Graph.cpp:127]   --->   Operation 37 'getelementptr' 'stack_addr' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_1 : Operation 38 [2/2] (0.86ns)   --->   "%node = load i5 %stack_addr" [Graph.cpp:80->Graph.cpp:127]   --->   Operation 38 'load' 'node' <Predicate = (!icmp_ln79)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 20> <RAM>
ST_1 : Operation 189 [1/1] (0.00ns)   --->   "%p_load = load i32 %empty"   --->   Operation 189 'load' 'p_load' <Predicate = (icmp_ln79)> <Delay = 0.00>
ST_1 : Operation 190 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out, i32 %p_load"   --->   Operation 190 'write' 'write_ln0' <Predicate = (icmp_ln79)> <Delay = 0.00>
ST_1 : Operation 191 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 191 'ret' 'ret_ln0' <Predicate = (icmp_ln79)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.73>
ST_2 : Operation 39 [1/2] (0.86ns)   --->   "%node = load i5 %stack_addr" [Graph.cpp:80->Graph.cpp:127]   --->   Operation 39 'load' 'node' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 20> <RAM>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%traversalSize_load = load i32 %traversalSize" [Graph.cpp:81->Graph.cpp:127]   --->   Operation 40 'load' 'traversalSize_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln81 = zext i32 %traversalSize_load" [Graph.cpp:81->Graph.cpp:127]   --->   Operation 41 'zext' 'zext_ln81' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%allTraversal_addr = getelementptr i5 %allTraversal, i64 0, i64 %zext_ln81" [Graph.cpp:81->Graph.cpp:127]   --->   Operation 42 'getelementptr' 'allTraversal_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.86ns)   --->   "%store_ln81 = store i5 %node, i5 %allTraversal_addr" [Graph.cpp:81->Graph.cpp:127]   --->   Operation 43 'store' 'store_ln81' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 20> <RAM>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%idxprom9_i31_cast = zext i5 %node" [Graph.cpp:80->Graph.cpp:127]   --->   Operation 44 'zext' 'idxprom9_i31_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%adjacencyList_18_addr = getelementptr i1 %adjacencyList_18, i64 0, i64 %idxprom9_i31_cast" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 45 'getelementptr' 'adjacencyList_18_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [2/2] (0.86ns)   --->   "%adjacencyList_18_load = load i5 %adjacencyList_18_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 46 'load' 'adjacencyList_18_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%adjacencyList_16_addr = getelementptr i1 %adjacencyList_16, i64 0, i64 %idxprom9_i31_cast" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 47 'getelementptr' 'adjacencyList_16_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [2/2] (0.86ns)   --->   "%adjacencyList_16_load = load i5 %adjacencyList_16_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 48 'load' 'adjacencyList_16_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%adjacencyList_15_addr = getelementptr i1 %adjacencyList_15, i64 0, i64 %idxprom9_i31_cast" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 49 'getelementptr' 'adjacencyList_15_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [2/2] (0.86ns)   --->   "%adjacencyList_15_load = load i5 %adjacencyList_15_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 50 'load' 'adjacencyList_15_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%adjacencyList_13_addr = getelementptr i1 %adjacencyList_13, i64 0, i64 %idxprom9_i31_cast" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 51 'getelementptr' 'adjacencyList_13_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [2/2] (0.86ns)   --->   "%adjacencyList_13_load = load i5 %adjacencyList_13_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 52 'load' 'adjacencyList_13_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%adjacencyList_11_addr = getelementptr i1 %adjacencyList_11, i64 0, i64 %idxprom9_i31_cast" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 53 'getelementptr' 'adjacencyList_11_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [2/2] (0.86ns)   --->   "%adjacencyList_11_load = load i5 %adjacencyList_11_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 54 'load' 'adjacencyList_11_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%adjacencyList_7_addr = getelementptr i1 %adjacencyList_7, i64 0, i64 %idxprom9_i31_cast" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 55 'getelementptr' 'adjacencyList_7_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [2/2] (0.86ns)   --->   "%adjacencyList_7_load = load i5 %adjacencyList_7_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 56 'load' 'adjacencyList_7_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%adjacencyList_4_addr = getelementptr i1 %adjacencyList_4, i64 0, i64 %idxprom9_i31_cast" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 57 'getelementptr' 'adjacencyList_4_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [2/2] (0.86ns)   --->   "%adjacencyList_4_load = load i5 %adjacencyList_4_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 58 'load' 'adjacencyList_4_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%adjacencyList_3_addr = getelementptr i1 %adjacencyList_3, i64 0, i64 %idxprom9_i31_cast" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 59 'getelementptr' 'adjacencyList_3_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [2/2] (0.86ns)   --->   "%adjacencyList_3_load = load i5 %adjacencyList_3_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 60 'load' 'adjacencyList_3_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%adjacencyList_2_addr = getelementptr i1 %adjacencyList_2, i64 0, i64 %idxprom9_i31_cast" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 61 'getelementptr' 'adjacencyList_2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [2/2] (0.86ns)   --->   "%adjacencyList_2_load = load i5 %adjacencyList_2_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 62 'load' 'adjacencyList_2_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%adjacencyList_1_addr = getelementptr i1 %adjacencyList_1, i64 0, i64 %idxprom9_i31_cast" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 63 'getelementptr' 'adjacencyList_1_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [2/2] (0.86ns)   --->   "%adjacencyList_1_load = load i5 %adjacencyList_1_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 64 'load' 'adjacencyList_1_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>

State 3 <SV = 2> <Delay = 1.78>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%specloopname_ln79 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [Graph.cpp:79->Graph.cpp:127]   --->   Operation 65 'specloopname' 'specloopname_ln79' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (1.78ns)   --->   "%top_2 = add i32 %top_1, i32 4294967295" [Graph.cpp:80->Graph.cpp:127]   --->   Operation 66 'add' 'top_2' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (1.78ns)   --->   "%add_ln81 = add i32 %traversalSize_load, i32 1" [Graph.cpp:81->Graph.cpp:127]   --->   Operation 67 'add' 'add_ln81' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%store_ln81 = store i32 %add_ln81, i32 %traversalSize" [Graph.cpp:81->Graph.cpp:127]   --->   Operation 68 'store' 'store_ln81' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 69 [1/2] (0.86ns)   --->   "%adjacencyList_18_load = load i5 %adjacencyList_18_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 69 'load' 'adjacencyList_18_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_3 : Operation 70 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %adjacencyList_18_load, void %for.body.i37.split.2, void %land.lhs.true.i39.1" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 70 'br' 'br_ln84' <Predicate = true> <Delay = 0.63>
ST_3 : Operation 71 [2/2] (0.86ns)   --->   "%visited_1_load = load i5 %visited_1_addr_9" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 71 'load' 'visited_1_load' <Predicate = (adjacencyList_18_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_3 : Operation 72 [1/2] (0.86ns)   --->   "%adjacencyList_16_load = load i5 %adjacencyList_16_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 72 'load' 'adjacencyList_16_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_3 : Operation 73 [2/2] (0.86ns)   --->   "%visited_1_load_1 = load i5 %visited_1_addr_8" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 73 'load' 'visited_1_load_1' <Predicate = (adjacencyList_16_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_3 : Operation 74 [1/2] (0.86ns)   --->   "%adjacencyList_15_load = load i5 %adjacencyList_15_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 74 'load' 'adjacencyList_15_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_3 : Operation 75 [1/2] (0.86ns)   --->   "%adjacencyList_13_load = load i5 %adjacencyList_13_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 75 'load' 'adjacencyList_13_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_3 : Operation 76 [1/2] (0.86ns)   --->   "%adjacencyList_11_load = load i5 %adjacencyList_11_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 76 'load' 'adjacencyList_11_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_3 : Operation 77 [1/2] (0.86ns)   --->   "%adjacencyList_7_load = load i5 %adjacencyList_7_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 77 'load' 'adjacencyList_7_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_3 : Operation 78 [1/2] (0.86ns)   --->   "%adjacencyList_4_load = load i5 %adjacencyList_4_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 78 'load' 'adjacencyList_4_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_3 : Operation 79 [1/2] (0.86ns)   --->   "%adjacencyList_3_load = load i5 %adjacencyList_3_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 79 'load' 'adjacencyList_3_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_3 : Operation 80 [1/2] (0.86ns)   --->   "%adjacencyList_2_load = load i5 %adjacencyList_2_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 80 'load' 'adjacencyList_2_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_3 : Operation 81 [1/2] (0.86ns)   --->   "%adjacencyList_1_load = load i5 %adjacencyList_1_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 81 'load' 'adjacencyList_1_load' <Predicate = true> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>

State 4 <SV = 3> <Delay = 3.92>
ST_4 : Operation 82 [1/2] (0.86ns)   --->   "%visited_1_load = load i5 %visited_1_addr_9" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 82 'load' 'visited_1_load' <Predicate = (!icmp_ln79 & adjacencyList_18_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_4 : Operation 83 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %visited_1_load, void %if.then.i43.1, void %for.body.i37.split.2" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 83 'br' 'br_ln84' <Predicate = (!icmp_ln79 & adjacencyList_18_load)> <Delay = 0.63>
ST_4 : Operation 84 [1/1] (0.86ns)   --->   "%store_ln86 = store i5 18, i5 %stack_addr" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 84 'store' 'store_ln86' <Predicate = (!icmp_ln79 & adjacencyList_18_load & !visited_1_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 20> <RAM>
ST_4 : Operation 85 [1/1] (0.63ns)   --->   "%br_ln87 = br void %for.body.i37.split.2" [Graph.cpp:87->Graph.cpp:127]   --->   Operation 85 'br' 'br_ln87' <Predicate = (!icmp_ln79 & adjacencyList_18_load & !visited_1_load)> <Delay = 0.63>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%top_9_1 = phi i32 %top_1, void %if.then.i43.1, i32 %top_2, void %VITIS_LOOP_83_2.i, i32 %top_2, void %land.lhs.true.i39.1"   --->   Operation 86 'phi' 'top_9_1' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %adjacencyList_16_load, void %for.body.i37.split.4, void %land.lhs.true.i39.3" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 87 'br' 'br_ln84' <Predicate = (!icmp_ln79)> <Delay = 0.63>
ST_4 : Operation 88 [1/2] (0.86ns)   --->   "%visited_1_load_1 = load i5 %visited_1_addr_8" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 88 'load' 'visited_1_load_1' <Predicate = (!icmp_ln79 & adjacencyList_16_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_4 : Operation 89 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %visited_1_load_1, void %if.then.i43.3, void %for.body.i37.split.4" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 89 'br' 'br_ln84' <Predicate = (!icmp_ln79 & adjacencyList_16_load)> <Delay = 0.63>
ST_4 : Operation 90 [1/1] (1.78ns)   --->   "%add_ln86 = add i32 %top_9_1, i32 1" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 90 'add' 'add_ln86' <Predicate = (!icmp_ln79 & adjacencyList_16_load & !visited_1_load_1)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 91 [1/1] (0.63ns)   --->   "%br_ln87 = br void %for.body.i37.split.4" [Graph.cpp:87->Graph.cpp:127]   --->   Operation 91 'br' 'br_ln87' <Predicate = (!icmp_ln79 & adjacencyList_16_load & !visited_1_load_1)> <Delay = 0.63>
ST_4 : Operation 92 [1/1] (0.00ns)   --->   "%top_9_3 = phi i32 %add_ln86, void %if.then.i43.3, i32 %top_9_1, void %for.body.i37.split.2, i32 %top_9_1, void %land.lhs.true.i39.3" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 92 'phi' 'top_9_3' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_4 : Operation 93 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %adjacencyList_15_load, void %for.body.i37.split.5, void %land.lhs.true.i39.4" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 93 'br' 'br_ln84' <Predicate = (!icmp_ln79)> <Delay = 0.63>
ST_4 : Operation 94 [2/2] (0.86ns)   --->   "%visited_1_load_2 = load i5 %visited_1_addr_7" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 94 'load' 'visited_1_load_2' <Predicate = (!icmp_ln79 & adjacencyList_15_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_4 : Operation 95 [2/2] (0.86ns)   --->   "%visited_1_load_3 = load i5 %visited_1_addr_6" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 95 'load' 'visited_1_load_3' <Predicate = (!icmp_ln79 & adjacencyList_13_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>

State 5 <SV = 4> <Delay = 4.84>
ST_5 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln86 = zext i32 %add_ln86" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 96 'zext' 'zext_ln86' <Predicate = (!icmp_ln79 & adjacencyList_16_load & !visited_1_load_1)> <Delay = 0.00>
ST_5 : Operation 97 [1/1] (0.00ns)   --->   "%stack_addr_1 = getelementptr i5 %stack, i64 0, i64 %zext_ln86" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 97 'getelementptr' 'stack_addr_1' <Predicate = (!icmp_ln79 & adjacencyList_16_load & !visited_1_load_1)> <Delay = 0.00>
ST_5 : Operation 98 [1/1] (0.86ns)   --->   "%store_ln86 = store i5 16, i5 %stack_addr_1" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 98 'store' 'store_ln86' <Predicate = (!icmp_ln79 & adjacencyList_16_load & !visited_1_load_1)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 20> <RAM>
ST_5 : Operation 99 [1/2] (0.86ns)   --->   "%visited_1_load_2 = load i5 %visited_1_addr_7" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 99 'load' 'visited_1_load_2' <Predicate = (!icmp_ln79 & adjacencyList_15_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_5 : Operation 100 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %visited_1_load_2, void %if.then.i43.4, void %for.body.i37.split.5" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 100 'br' 'br_ln84' <Predicate = (!icmp_ln79 & adjacencyList_15_load)> <Delay = 0.63>
ST_5 : Operation 101 [1/1] (1.78ns)   --->   "%add_ln86_1 = add i32 %top_9_3, i32 1" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 101 'add' 'add_ln86_1' <Predicate = (!icmp_ln79 & adjacencyList_15_load & !visited_1_load_2)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 102 [1/1] (0.63ns)   --->   "%br_ln87 = br void %for.body.i37.split.5" [Graph.cpp:87->Graph.cpp:127]   --->   Operation 102 'br' 'br_ln87' <Predicate = (!icmp_ln79 & adjacencyList_15_load & !visited_1_load_2)> <Delay = 0.63>
ST_5 : Operation 103 [1/1] (0.00ns)   --->   "%top_9_4 = phi i32 %add_ln86_1, void %if.then.i43.4, i32 %top_9_3, void %for.body.i37.split.4, i32 %top_9_3, void %land.lhs.true.i39.4" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 103 'phi' 'top_9_4' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_5 : Operation 104 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %adjacencyList_13_load, void %for.body.i37.split.7, void %land.lhs.true.i39.6" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 104 'br' 'br_ln84' <Predicate = (!icmp_ln79)> <Delay = 0.63>
ST_5 : Operation 105 [1/2] (0.86ns)   --->   "%visited_1_load_3 = load i5 %visited_1_addr_6" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 105 'load' 'visited_1_load_3' <Predicate = (!icmp_ln79 & adjacencyList_13_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_5 : Operation 106 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %visited_1_load_3, void %if.then.i43.6, void %for.body.i37.split.7" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 106 'br' 'br_ln84' <Predicate = (!icmp_ln79 & adjacencyList_13_load)> <Delay = 0.63>
ST_5 : Operation 107 [1/1] (1.78ns)   --->   "%add_ln86_2 = add i32 %top_9_4, i32 1" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 107 'add' 'add_ln86_2' <Predicate = (!icmp_ln79 & adjacencyList_13_load & !visited_1_load_3)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 108 [1/1] (0.63ns)   --->   "%br_ln87 = br void %for.body.i37.split.7" [Graph.cpp:87->Graph.cpp:127]   --->   Operation 108 'br' 'br_ln87' <Predicate = (!icmp_ln79 & adjacencyList_13_load & !visited_1_load_3)> <Delay = 0.63>
ST_5 : Operation 109 [1/1] (0.00ns)   --->   "%top_9_6 = phi i32 %add_ln86_2, void %if.then.i43.6, i32 %top_9_4, void %for.body.i37.split.5, i32 %top_9_4, void %land.lhs.true.i39.6" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 109 'phi' 'top_9_6' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_5 : Operation 110 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %adjacencyList_11_load, void %for.body.i37.split.9, void %land.lhs.true.i39.8" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 110 'br' 'br_ln84' <Predicate = (!icmp_ln79)> <Delay = 0.63>
ST_5 : Operation 111 [2/2] (0.86ns)   --->   "%visited_1_load_4 = load i5 %visited_1_addr_5" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 111 'load' 'visited_1_load_4' <Predicate = (!icmp_ln79 & adjacencyList_11_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_5 : Operation 112 [2/2] (0.86ns)   --->   "%visited_1_load_5 = load i5 %visited_1_addr_4" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 112 'load' 'visited_1_load_5' <Predicate = (!icmp_ln79 & adjacencyList_7_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>

State 6 <SV = 5> <Delay = 1.50>
ST_6 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln86_1 = zext i32 %add_ln86_1" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 113 'zext' 'zext_ln86_1' <Predicate = (!icmp_ln79 & adjacencyList_15_load & !visited_1_load_2)> <Delay = 0.00>
ST_6 : Operation 114 [1/1] (0.00ns)   --->   "%stack_addr_2 = getelementptr i5 %stack, i64 0, i64 %zext_ln86_1" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 114 'getelementptr' 'stack_addr_2' <Predicate = (!icmp_ln79 & adjacencyList_15_load & !visited_1_load_2)> <Delay = 0.00>
ST_6 : Operation 115 [1/1] (0.86ns)   --->   "%store_ln86 = store i5 15, i5 %stack_addr_2" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 115 'store' 'store_ln86' <Predicate = (!icmp_ln79 & adjacencyList_15_load & !visited_1_load_2)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 20> <RAM>
ST_6 : Operation 116 [1/2] (0.86ns)   --->   "%visited_1_load_4 = load i5 %visited_1_addr_5" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 116 'load' 'visited_1_load_4' <Predicate = (!icmp_ln79 & adjacencyList_11_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_6 : Operation 117 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %visited_1_load_4, void %if.then.i43.8, void %for.body.i37.split.9" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 117 'br' 'br_ln84' <Predicate = (!icmp_ln79 & adjacencyList_11_load)> <Delay = 0.63>
ST_6 : Operation 118 [1/2] (0.86ns)   --->   "%visited_1_load_5 = load i5 %visited_1_addr_4" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 118 'load' 'visited_1_load_5' <Predicate = (!icmp_ln79 & adjacencyList_7_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_6 : Operation 119 [2/2] (0.86ns)   --->   "%visited_1_load_6 = load i5 %visited_1_addr_3" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 119 'load' 'visited_1_load_6' <Predicate = (!icmp_ln79 & adjacencyList_4_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_6 : Operation 120 [2/2] (0.86ns)   --->   "%visited_1_load_7 = load i5 %visited_1_addr_2" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 120 'load' 'visited_1_load_7' <Predicate = (!icmp_ln79 & adjacencyList_3_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>

State 7 <SV = 6> <Delay = 1.78>
ST_7 : Operation 121 [1/1] (0.00ns)   --->   "%zext_ln86_2 = zext i32 %add_ln86_2" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 121 'zext' 'zext_ln86_2' <Predicate = (!icmp_ln79 & adjacencyList_13_load & !visited_1_load_3)> <Delay = 0.00>
ST_7 : Operation 122 [1/1] (0.00ns)   --->   "%stack_addr_3 = getelementptr i5 %stack, i64 0, i64 %zext_ln86_2" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 122 'getelementptr' 'stack_addr_3' <Predicate = (!icmp_ln79 & adjacencyList_13_load & !visited_1_load_3)> <Delay = 0.00>
ST_7 : Operation 123 [1/1] (0.86ns)   --->   "%store_ln86 = store i5 13, i5 %stack_addr_3" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 123 'store' 'store_ln86' <Predicate = (!icmp_ln79 & adjacencyList_13_load & !visited_1_load_3)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 20> <RAM>
ST_7 : Operation 124 [1/1] (1.78ns)   --->   "%add_ln86_3 = add i32 %top_9_6, i32 1" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 124 'add' 'add_ln86_3' <Predicate = (!icmp_ln79 & adjacencyList_11_load & !visited_1_load_4)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 125 [1/1] (0.63ns)   --->   "%br_ln87 = br void %for.body.i37.split.9" [Graph.cpp:87->Graph.cpp:127]   --->   Operation 125 'br' 'br_ln87' <Predicate = (!icmp_ln79 & adjacencyList_11_load & !visited_1_load_4)> <Delay = 0.63>
ST_7 : Operation 126 [1/2] (0.86ns)   --->   "%visited_1_load_6 = load i5 %visited_1_addr_3" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 126 'load' 'visited_1_load_6' <Predicate = (!icmp_ln79 & adjacencyList_4_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_7 : Operation 127 [1/2] (0.86ns)   --->   "%visited_1_load_7 = load i5 %visited_1_addr_2" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 127 'load' 'visited_1_load_7' <Predicate = (!icmp_ln79 & adjacencyList_3_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_7 : Operation 128 [2/2] (0.86ns)   --->   "%visited_1_load_8 = load i5 %visited_1_addr_1" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 128 'load' 'visited_1_load_8' <Predicate = (!icmp_ln79 & adjacencyList_2_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_7 : Operation 129 [2/2] (0.86ns)   --->   "%visited_1_load_9 = load i5 %visited_1_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 129 'load' 'visited_1_load_9' <Predicate = (!icmp_ln79 & adjacencyList_1_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>

State 8 <SV = 7> <Delay = 0.86>
ST_8 : Operation 130 [1/1] (0.86ns)   --->   "%store_ln85 = store i1 1, i5 %visited_1_addr_9" [Graph.cpp:85->Graph.cpp:127]   --->   Operation 130 'store' 'store_ln85' <Predicate = (!icmp_ln79 & adjacencyList_18_load & !visited_1_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_8 : Operation 131 [1/1] (0.86ns)   --->   "%store_ln85 = store i1 1, i5 %visited_1_addr_8" [Graph.cpp:85->Graph.cpp:127]   --->   Operation 131 'store' 'store_ln85' <Predicate = (!icmp_ln79 & adjacencyList_16_load & !visited_1_load_1)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_8 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln86_3 = zext i32 %add_ln86_3" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 132 'zext' 'zext_ln86_3' <Predicate = (!icmp_ln79 & adjacencyList_11_load & !visited_1_load_4)> <Delay = 0.00>
ST_8 : Operation 133 [1/1] (0.00ns)   --->   "%stack_addr_4 = getelementptr i5 %stack, i64 0, i64 %zext_ln86_3" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 133 'getelementptr' 'stack_addr_4' <Predicate = (!icmp_ln79 & adjacencyList_11_load & !visited_1_load_4)> <Delay = 0.00>
ST_8 : Operation 134 [1/1] (0.86ns)   --->   "%store_ln86 = store i5 11, i5 %stack_addr_4" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 134 'store' 'store_ln86' <Predicate = (!icmp_ln79 & adjacencyList_11_load & !visited_1_load_4)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 20> <RAM>
ST_8 : Operation 135 [1/1] (0.00ns)   --->   "%top_9_8 = phi i32 %add_ln86_3, void %if.then.i43.8, i32 %top_9_6, void %for.body.i37.split.7, i32 %top_9_6, void %land.lhs.true.i39.8" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 135 'phi' 'top_9_8' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_8 : Operation 136 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %adjacencyList_7_load, void %for.body.i37.split.13, void %land.lhs.true.i39.12" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 136 'br' 'br_ln84' <Predicate = (!icmp_ln79)> <Delay = 0.63>
ST_8 : Operation 137 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %visited_1_load_5, void %if.then.i43.12, void %for.body.i37.split.13" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 137 'br' 'br_ln84' <Predicate = (!icmp_ln79 & adjacencyList_7_load)> <Delay = 0.63>
ST_8 : Operation 138 [1/2] (0.86ns)   --->   "%visited_1_load_8 = load i5 %visited_1_addr_1" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 138 'load' 'visited_1_load_8' <Predicate = (!icmp_ln79 & adjacencyList_2_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_8 : Operation 139 [1/2] (0.86ns)   --->   "%visited_1_load_9 = load i5 %visited_1_addr" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 139 'load' 'visited_1_load_9' <Predicate = (!icmp_ln79 & adjacencyList_1_load)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>

State 9 <SV = 8> <Delay = 2.65>
ST_9 : Operation 140 [1/1] (0.86ns)   --->   "%store_ln85 = store i1 1, i5 %visited_1_addr_7" [Graph.cpp:85->Graph.cpp:127]   --->   Operation 140 'store' 'store_ln85' <Predicate = (!icmp_ln79 & adjacencyList_15_load & !visited_1_load_2)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_9 : Operation 141 [1/1] (0.86ns)   --->   "%store_ln85 = store i1 1, i5 %visited_1_addr_6" [Graph.cpp:85->Graph.cpp:127]   --->   Operation 141 'store' 'store_ln85' <Predicate = (!icmp_ln79 & adjacencyList_13_load & !visited_1_load_3)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_9 : Operation 142 [1/1] (1.78ns)   --->   "%add_ln86_4 = add i32 %top_9_8, i32 1" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 142 'add' 'add_ln86_4' <Predicate = (!icmp_ln79 & adjacencyList_7_load & !visited_1_load_5)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 143 [1/1] (0.00ns)   --->   "%zext_ln86_4 = zext i32 %add_ln86_4" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 143 'zext' 'zext_ln86_4' <Predicate = (!icmp_ln79 & adjacencyList_7_load & !visited_1_load_5)> <Delay = 0.00>
ST_9 : Operation 144 [1/1] (0.00ns)   --->   "%stack_addr_5 = getelementptr i5 %stack, i64 0, i64 %zext_ln86_4" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 144 'getelementptr' 'stack_addr_5' <Predicate = (!icmp_ln79 & adjacencyList_7_load & !visited_1_load_5)> <Delay = 0.00>
ST_9 : Operation 145 [1/1] (0.86ns)   --->   "%store_ln86 = store i5 7, i5 %stack_addr_5" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 145 'store' 'store_ln86' <Predicate = (!icmp_ln79 & adjacencyList_7_load & !visited_1_load_5)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 20> <RAM>

State 10 <SV = 9> <Delay = 3.28>
ST_10 : Operation 146 [1/1] (0.86ns)   --->   "%store_ln85 = store i1 1, i5 %visited_1_addr_5" [Graph.cpp:85->Graph.cpp:127]   --->   Operation 146 'store' 'store_ln85' <Predicate = (!icmp_ln79 & adjacencyList_11_load & !visited_1_load_4)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_10 : Operation 147 [1/1] (0.86ns)   --->   "%store_ln85 = store i1 1, i5 %visited_1_addr_4" [Graph.cpp:85->Graph.cpp:127]   --->   Operation 147 'store' 'store_ln85' <Predicate = (!icmp_ln79 & adjacencyList_7_load & !visited_1_load_5)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_10 : Operation 148 [1/1] (0.63ns)   --->   "%br_ln87 = br void %for.body.i37.split.13" [Graph.cpp:87->Graph.cpp:127]   --->   Operation 148 'br' 'br_ln87' <Predicate = (!icmp_ln79 & adjacencyList_7_load & !visited_1_load_5)> <Delay = 0.63>
ST_10 : Operation 149 [1/1] (0.00ns)   --->   "%top_9_12 = phi i32 %add_ln86_4, void %if.then.i43.12, i32 %top_9_8, void %for.body.i37.split.9, i32 %top_9_8, void %land.lhs.true.i39.12" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 149 'phi' 'top_9_12' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_10 : Operation 150 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %adjacencyList_4_load, void %for.body.i37.split.16, void %land.lhs.true.i39.15" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 150 'br' 'br_ln84' <Predicate = (!icmp_ln79)> <Delay = 0.63>
ST_10 : Operation 151 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %visited_1_load_6, void %if.then.i43.15, void %for.body.i37.split.16" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 151 'br' 'br_ln84' <Predicate = (!icmp_ln79 & adjacencyList_4_load)> <Delay = 0.63>
ST_10 : Operation 152 [1/1] (1.78ns)   --->   "%add_ln86_5 = add i32 %top_9_12, i32 1" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 152 'add' 'add_ln86_5' <Predicate = (!icmp_ln79 & adjacencyList_4_load & !visited_1_load_6)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 153 [1/1] (0.00ns)   --->   "%zext_ln86_5 = zext i32 %add_ln86_5" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 153 'zext' 'zext_ln86_5' <Predicate = (!icmp_ln79 & adjacencyList_4_load & !visited_1_load_6)> <Delay = 0.00>
ST_10 : Operation 154 [1/1] (0.00ns)   --->   "%stack_addr_6 = getelementptr i5 %stack, i64 0, i64 %zext_ln86_5" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 154 'getelementptr' 'stack_addr_6' <Predicate = (!icmp_ln79 & adjacencyList_4_load & !visited_1_load_6)> <Delay = 0.00>
ST_10 : Operation 155 [1/1] (0.86ns)   --->   "%store_ln86 = store i5 4, i5 %stack_addr_6" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 155 'store' 'store_ln86' <Predicate = (!icmp_ln79 & adjacencyList_4_load & !visited_1_load_6)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 20> <RAM>

State 11 <SV = 10> <Delay = 3.28>
ST_11 : Operation 156 [1/1] (0.86ns)   --->   "%store_ln85 = store i1 1, i5 %visited_1_addr_3" [Graph.cpp:85->Graph.cpp:127]   --->   Operation 156 'store' 'store_ln85' <Predicate = (!icmp_ln79 & adjacencyList_4_load & !visited_1_load_6)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_11 : Operation 157 [1/1] (0.63ns)   --->   "%br_ln87 = br void %for.body.i37.split.16" [Graph.cpp:87->Graph.cpp:127]   --->   Operation 157 'br' 'br_ln87' <Predicate = (!icmp_ln79 & adjacencyList_4_load & !visited_1_load_6)> <Delay = 0.63>
ST_11 : Operation 158 [1/1] (0.00ns)   --->   "%top_9_15 = phi i32 %add_ln86_5, void %if.then.i43.15, i32 %top_9_12, void %for.body.i37.split.13, i32 %top_9_12, void %land.lhs.true.i39.15" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 158 'phi' 'top_9_15' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_11 : Operation 159 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %adjacencyList_3_load, void %for.body.i37.split.17, void %land.lhs.true.i39.16" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 159 'br' 'br_ln84' <Predicate = (!icmp_ln79)> <Delay = 0.63>
ST_11 : Operation 160 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %visited_1_load_7, void %if.then.i43.16, void %for.body.i37.split.17" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 160 'br' 'br_ln84' <Predicate = (!icmp_ln79 & adjacencyList_3_load)> <Delay = 0.63>
ST_11 : Operation 161 [1/1] (0.86ns)   --->   "%store_ln85 = store i1 1, i5 %visited_1_addr_2" [Graph.cpp:85->Graph.cpp:127]   --->   Operation 161 'store' 'store_ln85' <Predicate = (!icmp_ln79 & adjacencyList_3_load & !visited_1_load_7)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_11 : Operation 162 [1/1] (1.78ns)   --->   "%add_ln86_6 = add i32 %top_9_15, i32 1" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 162 'add' 'add_ln86_6' <Predicate = (!icmp_ln79 & adjacencyList_3_load & !visited_1_load_7)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 163 [1/1] (0.00ns)   --->   "%zext_ln86_6 = zext i32 %add_ln86_6" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 163 'zext' 'zext_ln86_6' <Predicate = (!icmp_ln79 & adjacencyList_3_load & !visited_1_load_7)> <Delay = 0.00>
ST_11 : Operation 164 [1/1] (0.00ns)   --->   "%stack_addr_7 = getelementptr i5 %stack, i64 0, i64 %zext_ln86_6" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 164 'getelementptr' 'stack_addr_7' <Predicate = (!icmp_ln79 & adjacencyList_3_load & !visited_1_load_7)> <Delay = 0.00>
ST_11 : Operation 165 [1/1] (0.86ns)   --->   "%store_ln86 = store i5 3, i5 %stack_addr_7" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 165 'store' 'store_ln86' <Predicate = (!icmp_ln79 & adjacencyList_3_load & !visited_1_load_7)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 20> <RAM>
ST_11 : Operation 166 [1/1] (0.63ns)   --->   "%br_ln87 = br void %for.body.i37.split.17" [Graph.cpp:87->Graph.cpp:127]   --->   Operation 166 'br' 'br_ln87' <Predicate = (!icmp_ln79 & adjacencyList_3_load & !visited_1_load_7)> <Delay = 0.63>

State 12 <SV = 11> <Delay = 2.65>
ST_12 : Operation 167 [1/1] (0.00ns)   --->   "%top_9_16 = phi i32 %add_ln86_6, void %if.then.i43.16, i32 %top_9_15, void %for.body.i37.split.16, i32 %top_9_15, void %land.lhs.true.i39.16" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 167 'phi' 'top_9_16' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_12 : Operation 168 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %adjacencyList_2_load, void %for.body.i37.split.18, void %land.lhs.true.i39.17" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 168 'br' 'br_ln84' <Predicate = (!icmp_ln79)> <Delay = 0.63>
ST_12 : Operation 169 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %visited_1_load_8, void %if.then.i43.17, void %for.body.i37.split.18" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 169 'br' 'br_ln84' <Predicate = (!icmp_ln79 & adjacencyList_2_load)> <Delay = 0.63>
ST_12 : Operation 170 [1/1] (0.86ns)   --->   "%store_ln85 = store i1 1, i5 %visited_1_addr_1" [Graph.cpp:85->Graph.cpp:127]   --->   Operation 170 'store' 'store_ln85' <Predicate = (!icmp_ln79 & adjacencyList_2_load & !visited_1_load_8)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>
ST_12 : Operation 171 [1/1] (1.78ns)   --->   "%add_ln86_7 = add i32 %top_9_16, i32 1" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 171 'add' 'add_ln86_7' <Predicate = (!icmp_ln79 & adjacencyList_2_load & !visited_1_load_8)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 172 [1/1] (0.00ns)   --->   "%zext_ln86_7 = zext i32 %add_ln86_7" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 172 'zext' 'zext_ln86_7' <Predicate = (!icmp_ln79 & adjacencyList_2_load & !visited_1_load_8)> <Delay = 0.00>
ST_12 : Operation 173 [1/1] (0.00ns)   --->   "%stack_addr_8 = getelementptr i5 %stack, i64 0, i64 %zext_ln86_7" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 173 'getelementptr' 'stack_addr_8' <Predicate = (!icmp_ln79 & adjacencyList_2_load & !visited_1_load_8)> <Delay = 0.00>
ST_12 : Operation 174 [1/1] (0.86ns)   --->   "%store_ln86 = store i5 2, i5 %stack_addr_8" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 174 'store' 'store_ln86' <Predicate = (!icmp_ln79 & adjacencyList_2_load & !visited_1_load_8)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 20> <RAM>
ST_12 : Operation 175 [1/1] (0.63ns)   --->   "%br_ln87 = br void %for.body.i37.split.18" [Graph.cpp:87->Graph.cpp:127]   --->   Operation 175 'br' 'br_ln87' <Predicate = (!icmp_ln79 & adjacencyList_2_load & !visited_1_load_8)> <Delay = 0.63>
ST_12 : Operation 176 [1/1] (0.00ns)   --->   "%top_9_17 = phi i32 %add_ln86_7, void %if.then.i43.17, i32 %top_9_16, void %for.body.i37.split.17, i32 %top_9_16, void %land.lhs.true.i39.17" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 176 'phi' 'top_9_17' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_12 : Operation 177 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %adjacencyList_1_load, void %for.end.i48, void %land.lhs.true.i39.18" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 177 'br' 'br_ln84' <Predicate = (!icmp_ln79)> <Delay = 0.63>
ST_12 : Operation 178 [1/1] (0.63ns)   --->   "%br_ln84 = br i1 %visited_1_load_9, void %if.then.i43.18, void %for.end.i48" [Graph.cpp:84->Graph.cpp:127]   --->   Operation 178 'br' 'br_ln84' <Predicate = (!icmp_ln79 & adjacencyList_1_load)> <Delay = 0.63>
ST_12 : Operation 179 [1/1] (0.86ns)   --->   "%store_ln85 = store i1 1, i5 %visited_1_addr" [Graph.cpp:85->Graph.cpp:127]   --->   Operation 179 'store' 'store_ln85' <Predicate = (!icmp_ln79 & adjacencyList_1_load & !visited_1_load_9)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 20> <RAM>

State 13 <SV = 12> <Delay = 3.05>
ST_13 : Operation 180 [1/1] (1.78ns)   --->   "%add_ln86_8 = add i32 %top_9_17, i32 1" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 180 'add' 'add_ln86_8' <Predicate = (!icmp_ln79 & adjacencyList_1_load & !visited_1_load_9)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 181 [1/1] (0.00ns)   --->   "%zext_ln86_8 = zext i32 %add_ln86_8" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 181 'zext' 'zext_ln86_8' <Predicate = (!icmp_ln79 & adjacencyList_1_load & !visited_1_load_9)> <Delay = 0.00>
ST_13 : Operation 182 [1/1] (0.00ns)   --->   "%stack_addr_9 = getelementptr i5 %stack, i64 0, i64 %zext_ln86_8" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 182 'getelementptr' 'stack_addr_9' <Predicate = (!icmp_ln79 & adjacencyList_1_load & !visited_1_load_9)> <Delay = 0.00>
ST_13 : Operation 183 [1/1] (0.86ns)   --->   "%store_ln86 = store i5 1, i5 %stack_addr_9" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 183 'store' 'store_ln86' <Predicate = (!icmp_ln79 & adjacencyList_1_load & !visited_1_load_9)> <Delay = 0.86> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.86> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 20> <RAM>
ST_13 : Operation 184 [1/1] (0.63ns)   --->   "%br_ln87 = br void %for.end.i48" [Graph.cpp:87->Graph.cpp:127]   --->   Operation 184 'br' 'br_ln87' <Predicate = (!icmp_ln79 & adjacencyList_1_load & !visited_1_load_9)> <Delay = 0.63>
ST_13 : Operation 185 [1/1] (0.00ns)   --->   "%top_9_18 = phi i32 %add_ln86_8, void %if.then.i43.18, i32 %top_9_17, void %for.body.i37.split.18, i32 %top_9_17, void %land.lhs.true.i39.18" [Graph.cpp:86->Graph.cpp:127]   --->   Operation 185 'phi' 'top_9_18' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_13 : Operation 186 [1/1] (0.63ns)   --->   "%store_ln79 = store i32 %top_9_18, i32 %top" [Graph.cpp:79->Graph.cpp:127]   --->   Operation 186 'store' 'store_ln79' <Predicate = (!icmp_ln79)> <Delay = 0.63>
ST_13 : Operation 187 [1/1] (0.63ns)   --->   "%store_ln79 = store i32 %add_ln81, i32 %empty" [Graph.cpp:79->Graph.cpp:127]   --->   Operation 187 'store' 'store_ln79' <Predicate = (!icmp_ln79)> <Delay = 0.63>
ST_13 : Operation 188 [1/1] (0.00ns)   --->   "%br_ln79 = br void %while.cond.i24" [Graph.cpp:79->Graph.cpp:127]   --->   Operation 188 'br' 'br_ln79' <Predicate = (!icmp_ln79)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.784ns
The critical path consists of the following:
	'alloca' operation ('top') [18]  (0.000 ns)
	'load' operation ('top', Graph.cpp:80->Graph.cpp:127) on local variable 'top' [24]  (0.000 ns)
	'icmp' operation ('icmp_ln79', Graph.cpp:79->Graph.cpp:127) [36]  (1.784 ns)

 <State 2>: 1.734ns
The critical path consists of the following:
	'load' operation ('node', Graph.cpp:80->Graph.cpp:127) on array 'stack' [43]  (0.867 ns)
	'getelementptr' operation ('adjacencyList_3_addr', Graph.cpp:84->Graph.cpp:127) [153]  (0.000 ns)
	'load' operation ('adjacencyList_3_load', Graph.cpp:84->Graph.cpp:127) on array 'adjacencyList_3' [154]  (0.867 ns)

 <State 3>: 1.784ns
The critical path consists of the following:
	'add' operation ('top', Graph.cpp:80->Graph.cpp:127) [40]  (1.784 ns)

 <State 4>: 3.923ns
The critical path consists of the following:
	'load' operation ('visited_1_load', Graph.cpp:84->Graph.cpp:127) on array 'visited_1' [55]  (0.867 ns)
	multiplexor before 'phi' operation ('top') with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) [62]  (0.636 ns)
	'phi' operation ('top') with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) [62]  (0.000 ns)
	'add' operation ('add_ln86', Graph.cpp:86->Graph.cpp:127) [71]  (1.784 ns)
	multiplexor before 'phi' operation ('top_9_3', Graph.cpp:86->Graph.cpp:127) with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) ('add_ln86', Graph.cpp:86->Graph.cpp:127) [77]  (0.636 ns)
	'phi' operation ('top_9_3', Graph.cpp:86->Graph.cpp:127) with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) ('add_ln86', Graph.cpp:86->Graph.cpp:127) [77]  (0.000 ns)

 <State 5>: 4.840ns
The critical path consists of the following:
	'add' operation ('add_ln86_1', Graph.cpp:86->Graph.cpp:127) [86]  (1.784 ns)
	multiplexor before 'phi' operation ('top_9_4', Graph.cpp:86->Graph.cpp:127) with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) ('add_ln86', Graph.cpp:86->Graph.cpp:127) ('add_ln86_1', Graph.cpp:86->Graph.cpp:127) [92]  (0.636 ns)
	'phi' operation ('top_9_4', Graph.cpp:86->Graph.cpp:127) with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) ('add_ln86', Graph.cpp:86->Graph.cpp:127) ('add_ln86_1', Graph.cpp:86->Graph.cpp:127) [92]  (0.000 ns)
	'add' operation ('add_ln86_2', Graph.cpp:86->Graph.cpp:127) [101]  (1.784 ns)
	multiplexor before 'phi' operation ('top_9_6', Graph.cpp:86->Graph.cpp:127) with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) ('add_ln86', Graph.cpp:86->Graph.cpp:127) ('add_ln86_1', Graph.cpp:86->Graph.cpp:127) ('add_ln86_2', Graph.cpp:86->Graph.cpp:127) [107]  (0.636 ns)
	'phi' operation ('top_9_6', Graph.cpp:86->Graph.cpp:127) with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) ('add_ln86', Graph.cpp:86->Graph.cpp:127) ('add_ln86_1', Graph.cpp:86->Graph.cpp:127) ('add_ln86_2', Graph.cpp:86->Graph.cpp:127) [107]  (0.000 ns)

 <State 6>: 1.503ns
The critical path consists of the following:
	'load' operation ('visited_1_load_4', Graph.cpp:84->Graph.cpp:127) on array 'visited_1' [112]  (0.867 ns)
	multiplexor before 'phi' operation ('top_9_8', Graph.cpp:86->Graph.cpp:127) with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) ('add_ln86', Graph.cpp:86->Graph.cpp:127) ('add_ln86_1', Graph.cpp:86->Graph.cpp:127) ('add_ln86_2', Graph.cpp:86->Graph.cpp:127) ('add_ln86_3', Graph.cpp:86->Graph.cpp:127) [122]  (0.636 ns)

 <State 7>: 1.784ns
The critical path consists of the following:
	'add' operation ('add_ln86_3', Graph.cpp:86->Graph.cpp:127) [116]  (1.784 ns)

 <State 8>: 0.867ns
The critical path consists of the following:
	'store' operation ('store_ln85', Graph.cpp:85->Graph.cpp:127) of constant 1 on array 'visited_1' [58]  (0.867 ns)

 <State 9>: 2.651ns
The critical path consists of the following:
	'add' operation ('add_ln86_4', Graph.cpp:86->Graph.cpp:127) [131]  (1.784 ns)
	'getelementptr' operation ('stack_addr_5', Graph.cpp:86->Graph.cpp:127) [133]  (0.000 ns)
	'store' operation ('store_ln86', Graph.cpp:86->Graph.cpp:127) of constant 7 on array 'stack' [134]  (0.867 ns)

 <State 10>: 3.287ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('top_9_12', Graph.cpp:86->Graph.cpp:127) with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) ('add_ln86', Graph.cpp:86->Graph.cpp:127) ('add_ln86_1', Graph.cpp:86->Graph.cpp:127) ('add_ln86_2', Graph.cpp:86->Graph.cpp:127) ('add_ln86_3', Graph.cpp:86->Graph.cpp:127) ('add_ln86_4', Graph.cpp:86->Graph.cpp:127) [137]  (0.636 ns)
	'phi' operation ('top_9_12', Graph.cpp:86->Graph.cpp:127) with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) ('add_ln86', Graph.cpp:86->Graph.cpp:127) ('add_ln86_1', Graph.cpp:86->Graph.cpp:127) ('add_ln86_2', Graph.cpp:86->Graph.cpp:127) ('add_ln86_3', Graph.cpp:86->Graph.cpp:127) ('add_ln86_4', Graph.cpp:86->Graph.cpp:127) [137]  (0.000 ns)
	'add' operation ('add_ln86_5', Graph.cpp:86->Graph.cpp:127) [146]  (1.784 ns)
	'getelementptr' operation ('stack_addr_6', Graph.cpp:86->Graph.cpp:127) [148]  (0.000 ns)
	'store' operation ('store_ln86', Graph.cpp:86->Graph.cpp:127) of constant 4 on array 'stack' [149]  (0.867 ns)

 <State 11>: 3.287ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('top_9_15', Graph.cpp:86->Graph.cpp:127) with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) ('add_ln86', Graph.cpp:86->Graph.cpp:127) ('add_ln86_1', Graph.cpp:86->Graph.cpp:127) ('add_ln86_2', Graph.cpp:86->Graph.cpp:127) ('add_ln86_3', Graph.cpp:86->Graph.cpp:127) ('add_ln86_4', Graph.cpp:86->Graph.cpp:127) ('add_ln86_5', Graph.cpp:86->Graph.cpp:127) [152]  (0.636 ns)
	'phi' operation ('top_9_15', Graph.cpp:86->Graph.cpp:127) with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) ('add_ln86', Graph.cpp:86->Graph.cpp:127) ('add_ln86_1', Graph.cpp:86->Graph.cpp:127) ('add_ln86_2', Graph.cpp:86->Graph.cpp:127) ('add_ln86_3', Graph.cpp:86->Graph.cpp:127) ('add_ln86_4', Graph.cpp:86->Graph.cpp:127) ('add_ln86_5', Graph.cpp:86->Graph.cpp:127) [152]  (0.000 ns)
	'add' operation ('add_ln86_6', Graph.cpp:86->Graph.cpp:127) [161]  (1.784 ns)
	'getelementptr' operation ('stack_addr_7', Graph.cpp:86->Graph.cpp:127) [163]  (0.000 ns)
	'store' operation ('store_ln86', Graph.cpp:86->Graph.cpp:127) of constant 3 on array 'stack' [164]  (0.867 ns)

 <State 12>: 2.651ns
The critical path consists of the following:
	'phi' operation ('top_9_16', Graph.cpp:86->Graph.cpp:127) with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) ('add_ln86', Graph.cpp:86->Graph.cpp:127) ('add_ln86_1', Graph.cpp:86->Graph.cpp:127) ('add_ln86_2', Graph.cpp:86->Graph.cpp:127) ('add_ln86_3', Graph.cpp:86->Graph.cpp:127) ('add_ln86_4', Graph.cpp:86->Graph.cpp:127) ('add_ln86_5', Graph.cpp:86->Graph.cpp:127) ('add_ln86_6', Graph.cpp:86->Graph.cpp:127) [167]  (0.000 ns)
	'add' operation ('add_ln86_7', Graph.cpp:86->Graph.cpp:127) [176]  (1.784 ns)
	'getelementptr' operation ('stack_addr_8', Graph.cpp:86->Graph.cpp:127) [178]  (0.000 ns)
	'store' operation ('store_ln86', Graph.cpp:86->Graph.cpp:127) of constant 2 on array 'stack' [179]  (0.867 ns)

 <State 13>: 3.056ns
The critical path consists of the following:
	'add' operation ('add_ln86_8', Graph.cpp:86->Graph.cpp:127) [191]  (1.784 ns)
	multiplexor before 'phi' operation ('top_9_18', Graph.cpp:86->Graph.cpp:127) with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) ('add_ln86', Graph.cpp:86->Graph.cpp:127) ('add_ln86_1', Graph.cpp:86->Graph.cpp:127) ('add_ln86_2', Graph.cpp:86->Graph.cpp:127) ('add_ln86_3', Graph.cpp:86->Graph.cpp:127) ('add_ln86_4', Graph.cpp:86->Graph.cpp:127) ('add_ln86_5', Graph.cpp:86->Graph.cpp:127) ('add_ln86_6', Graph.cpp:86->Graph.cpp:127) ('add_ln86_7', Graph.cpp:86->Graph.cpp:127) ('add_ln86_8', Graph.cpp:86->Graph.cpp:127) [197]  (0.636 ns)
	'phi' operation ('top_9_18', Graph.cpp:86->Graph.cpp:127) with incoming values : ('top', Graph.cpp:80->Graph.cpp:127) ('add_ln86', Graph.cpp:86->Graph.cpp:127) ('add_ln86_1', Graph.cpp:86->Graph.cpp:127) ('add_ln86_2', Graph.cpp:86->Graph.cpp:127) ('add_ln86_3', Graph.cpp:86->Graph.cpp:127) ('add_ln86_4', Graph.cpp:86->Graph.cpp:127) ('add_ln86_5', Graph.cpp:86->Graph.cpp:127) ('add_ln86_6', Graph.cpp:86->Graph.cpp:127) ('add_ln86_7', Graph.cpp:86->Graph.cpp:127) ('add_ln86_8', Graph.cpp:86->Graph.cpp:127) [197]  (0.000 ns)
	'store' operation ('store_ln79', Graph.cpp:79->Graph.cpp:127) of variable 'top_9_18', Graph.cpp:86->Graph.cpp:127 on local variable 'top' [198]  (0.636 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
