import numpy as np
class AdaptiveScheduler:
    def __init__(self, num_pes, num_tasks):
        self.num_pes = num_pes
        self.num_tasks = num_tasks
        self.task_queue = np.arange(num_tasks)
        self.task_status = np.zeros(num_tasks, dtype=int)
        self.pe_progress = np.zeros(num_pes, dtype=int)
    def schedule(self):
        while True:
            # Check if there are any tasks in the task queue.
            if np.all(self.task_queue == -1):
                break
            # Get the next task from the task queue.
            task = self.task_queue[0]
            self.task_queue[0] = -1
            # Find the PE with the least progress.
            min_progress = np.inf
            min_pe = -1
            for i in range(self.num_pes):
                if self.pe_progress[i] < min_progress:
                    min_progress = self.pe_progress[i]
                    min_pe = i
            # Assign the task to the PE with the least progress.
            self.pe_progress[min_pe] += 1
            # Remove the task from the task queue.
            self.task_queue = np.delete(self.task_queue, 0)
            # Print the task and PE information.
            print("Task {} assigned to PE {}".format(task, min_pe))
if __name__ == "__main__":
    scheduler = AdaptiveScheduler(4, 10)
    scheduler.schedule()